import requests
import datetime
from pprint import pprint
from config import btoken, token
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import main as btn

bot = Bot(token=btoken)
dp = Dispatcher(bot=bot)
lst = ['‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ùì', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚¨ÖÔ∏è', '–î—Ä—É–≥–æ–µ‚û°Ô∏è', '‚ùì–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?‚ùì', 'üí∏–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—åüí∏', 'üó∫–ì–æ—Ä–æ–¥–∞üó∫']
citys = ['–°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫', '–£—Ñ–∞', '–ë–∞–π–º–∞–∫', '–ë–µ–ª–µ–±–µ–π', '–ë–µ–ª–æ—Ä–µ—Ü–∫', '–ë–ª–∞–≥–≤–µ—â–µ–Ω—Å–∫', "–ò—à–∏–º–±–∞–π", '–ö—É–º–µ—Ä—Ç–∞—É', '–ú–µ–ª–µ—É–∑',
         '–ù–µ—Ñ—Ç–µ–∫–∞–º—Å–∫', '–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π', '–°–∞–ª–∞–≤–∞—Ç', '–°–∏–±–∞–π', '–¢—É–π–º–∞–∑—ã']


@dp.message_handler(commands=["start"])
async def start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è –ø—Ä–∏—à–ª—é —Å–≤–æ–¥–∫—É –æ –ø–æ–≥–æ–¥–µ!", reply_markup=btn.mainMenu)


@dp.message_handler()
async def get_weather(message: types.Message):
    if message.text == '‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è‚ùì':
        await bot.send_message(message.from_user.id,
                               f'–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ —É–¥–æ–±–Ω–æ —É–∑–Ω–∞—Ç—å:\n'
                               f'–ü–æ–≥–æ–¥—É\n–¢–µ–º–ø–µ—Ä–∞—Ç—É\n–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞\n–î–∞–≤–ª–µ–Ω–∏–µ\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞\n'
                               f'–í–æ—Å—Ö–æ–¥ –∏ –∑–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–≤–µ—Ç–æ–≤–æ–≥–æ –¥–Ω—è!')

    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚¨ÖÔ∏è':
        await bot.send_message(message.from_user.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚¨ÖÔ∏è', reply_markup=btn.mainMenu)

    elif message.text == '–î—Ä—É–≥–æ–µ‚û°Ô∏è':
        await bot.send_message(message.from_user.id, '–î—Ä—É–≥–æ–µ‚û°Ô∏è', reply_markup=btn.otherMenu)

    elif message.text == '‚ùì–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?‚ùì':
        await bot.send_message(message.from_user.id,
                               f'–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ\n'
                               '–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞\n'
                               '–ò–ª–∏ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞\n(–ü–æ–∫–∞ —á—Ç–æ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≥–æ—Ä–æ–¥–∞ –ë–∞—à–∫–∏—Ä–∏–∏)')
    elif message.text == 'üí∏–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—åüí∏':
        await bot.send_message(message.from_user.id, f'–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞: https://www.donationalerts.com/r/dj_dominat')

    elif message.text == 'üó∫–ì–æ—Ä–æ–¥–∞üó∫':
        await bot.send_message(message.from_user.id, 'üó∫–ì–æ—Ä–æ–¥–∞üó∫', reply_markup=btn.cityMenu)

    smile = {
        "Clear": "–Ø—Å–Ω–æ \U00002600",
        "Clouds": "–û–±–ª–∞—á–Ω–æ \U00002601",
        "Rain": "–î–æ–∂–¥—å \U00002614",
        "Drizzle": "–î–æ–∂–¥—å \U00002614",
        "Thunderstorm": "–ì—Ä–æ–∑–∞ \U000026A1",
        "Snow": "–°–Ω–µ–≥ \U0001F328",
        "Mist": "–¢—É–º–∞–Ω \U0001F32B"
    }

    try:
        r = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={token}&units=metric"
        )
        data = r.json()
        pprint(data)

        city = data["name"]
        cur_temp = data["main"]["temp"]
        country = data["sys"]["country"]
        temp_max = data["main"]["temp_max"]
        temp_min = data["main"]["temp_min"]
        feel = data["main"]["feels_like"]

        weather = data["weather"][0]["main"]
        if weather in smile:
            wd = smile[weather]
        else:
            wd = '–ù–µ –ø–æ–π–º—É —á—Ç–æ –∑–∞ –ø–æ–≥–æ–¥–∞ —Ç–∞–∫–∞—è...'
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind_speed = data["wind"]["speed"]
        sunrise_time = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset_time = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        lenth_of_day = datetime.datetime.fromtimestamp(data["sys"]["sunset"]) - datetime.datetime.fromtimestamp(
            data["sys"]["sunrise"])

        if message.text == '–°—Ç–µ—Ä–ª–∏—Ç–∞–º–∞–∫':
            file = open('str.jpg', 'rb')
        elif message.text == '–£—Ñ–∞':
            file = open('ufa.png', 'rb')
        elif message.text == '–ë–∞–π–º–∞–∫':
            file = open('bay.png', 'rb')
        elif message.text == '–ë–µ–ª–µ–±–µ–π':
            file = open('bele.png', 'rb')
        elif message.text == '–ë–µ–ª–æ—Ä–µ—Ü–∫':
            file = open('belorec.png', 'rb')
        elif message.text == '–ë–ª–∞–≥–≤–µ—â–µ–Ω—Å–∫':
            file = open('blag.png', 'rb')
        elif message.text == '–ò—à–∏–º–±–∞–π':
            file = open('ish.jpg', 'rb')
        elif message.text == '–ö—É–º–µ—Ä—Ç–∞—É':
            file = open('kum.png', 'rb')
        elif message.text == '–ú–µ–ª–µ—É–∑':
            file = open('mel.png', 'rb')
        elif message.text == '–ù–µ—Ñ—Ç–µ–∫–∞–º—Å–∫':
            file = open('Neftekamsk.jpg', 'rb')
        elif message.text == '–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π':
            file = open('okt.png', 'rb')
        elif message.text == '–°–∞–ª–∞–≤–∞—Ç':
            file = open('salavat.png', 'rb')
        elif message.text == '–°–∏–±–∞–π':
            file = open('sib.jpg', 'rb')
        elif message.text == '–¢—É–π–º–∞–∑—ã':
            file = open('tyi.png', 'rb')

        if message.text in citys:
            await bot.send_photo(message.chat.id, file,
                                 f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}***\n"
                                 f"–ü–æ–≥–æ–¥–∞ –≤ {city}, {country}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}C \n{wd}\n"
                                 f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feel}C\n"
                                 f"–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                                 f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–µ: {sunrise_time}\n–ó–∞–∫–∞—Ç: {sunset_time}\n–°–≤–µ—Ç–æ–≤–æ–π –¥–µ–Ω—å: {lenth_of_day}\n"
                                 f"***–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!***")
        else:
            await bot.send_message(message.from_user.id,
                                   f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}***\n"
                                   f"–ü–æ–≥–æ–¥–∞ –≤ {city}, {country}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp}C \n{wd}\n"
                                   f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feel}C\n"
                                   f"–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                                   f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–µ: {sunrise_time}\n–ó–∞–∫–∞—Ç: {sunset_time}\n–°–≤–µ—Ç–æ–≤–æ–π –¥–µ–Ω—å: {lenth_of_day}\n"
                                   f"***–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!***")

    except:
        if message.text not in lst:
            await message.reply('\U00002620 –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ \U00002620')


if __name__ == "__main__":
    executor.start_polling(dp)
